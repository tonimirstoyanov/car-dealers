{"ast":null,"code":"import { response } from \"./response.js\";\nexport const getAll = async () => {\n  let result = await fetch('http://localhost:3030/car/catalog');\n  return response(result);\n};\nexport const lastAdded = async () => {\n  let result = await fetch('http://localhost:3030').then(response => response.json());\n};\nexport const getOne = async id => {\n  let result = await fetch(`http://localhost:3030/car/${id}/details`).then(response => response.json());\n};\nexport const create = async (data, token) => {\n  let result = await fetch('http://localhost:3030/car/create', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'auth_token': token\n    },\n    body: JSON.stringify(data)\n  });\n  let jsonResult = await result.json();\n\n  if (result.ok) {\n    return jsonResult;\n  } else {\n    throw jsonResult.message;\n  }\n};\nexport const deleteOne = async (carId, token) => {\n  let result = await fetch(`http://localhost:3030/car/${carId}/delete`, {\n    method: 'DELETE',\n    headers: {\n      'auth_token': token\n    }\n  });\n  let jsonResult = await result.json();\n\n  if (result.ok) {\n    return jsonResult;\n  } else {\n    throw jsonResult.message;\n  }\n};\nexport const updateOne = async (carId, data, token) => {\n  let result = await fetch(`http://localhost:3030/car/${carId}/edit`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      'auth_token': token\n    },\n    body: JSON.stringify(data)\n  });\n  let jsonResult = await result.json();\n  console.log(jsonResult);\n\n  if (result.ok) {\n    return jsonResult;\n  } else {\n    throw jsonResult.message;\n  }\n};\nexport const like = async (carId, data, token) => {\n  let result = await fetch(`http://localhost:3030/car/${carId}/likes`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'auth_token': token\n    },\n    body: JSON.stringify(data)\n  });\n  let jsonResult = await result.json();\n\n  if (result.ok) {\n    return jsonResult;\n  } else {\n    throw jsonResult.message;\n  }\n};\nexport const dislike = async (carId, data, token) => {\n  let result = await fetch(`http://localhost:3030/car/${carId}/dislikes`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'auth_token': token\n    },\n    body: JSON.stringify(data)\n  });\n  let jsonResult = await result.json();\n\n  if (result.ok) {\n    return jsonResult;\n  } else {\n    throw jsonResult.message;\n  }\n};","map":{"version":3,"sources":["C:/Users/User/Desktop/car-dealers-react/src/services/carService.js"],"names":["response","getAll","result","fetch","lastAdded","then","json","getOne","id","create","data","token","method","headers","body","JSON","stringify","jsonResult","ok","message","deleteOne","carId","updateOne","console","log","like","dislike"],"mappings":"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","sourcesContent":["import { response } from \"./response.js\"\r\n\r\nexport const getAll = async () => {\r\n    let result = await fetch('http://localhost:3030/car/catalog')\r\n    return response(result)\r\n\r\n}\r\nexport const lastAdded = async () => {\r\n    let result = await fetch('http://localhost:3030')\r\n        .then(response => response.json())\r\n}\r\n\r\nexport const getOne = async (id) => {\r\n    let result = await fetch(`http://localhost:3030/car/${id}/details`)\r\n        .then(response => response.json())\r\n}\r\n\r\nexport const create = async (data, token) => {\r\n    let result = await fetch('http://localhost:3030/car/create', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'auth_token': token\r\n        },\r\n        body: JSON.stringify(data)\r\n    })\r\n    let jsonResult = await result.json();\r\n\r\n    if (result.ok) {\r\n        return jsonResult\r\n    } else {\r\n        throw jsonResult.message\r\n    }\r\n}\r\n\r\n\r\nexport const deleteOne = async (carId, token) => {\r\n    let result = await fetch(`http://localhost:3030/car/${carId}/delete`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'auth_token': token\r\n        }\r\n    })\r\n    let jsonResult = await result.json();\r\n\r\n    if (result.ok) {\r\n        return jsonResult\r\n    } else {\r\n        throw jsonResult.message\r\n    }\r\n}\r\n\r\nexport const updateOne = async (carId, data, token) => {\r\n    let result = await fetch(`http://localhost:3030/car/${carId}/edit`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'auth_token': token\r\n        },\r\n        body: JSON.stringify(data)\r\n    })\r\n    let jsonResult = await result.json();\r\n    console.log(jsonResult)\r\n    if (result.ok) {\r\n        return jsonResult\r\n    } else {\r\n        throw jsonResult.message\r\n    }\r\n}\r\n\r\nexport const like = async (carId, data, token) => {\r\n    let result = await fetch(`http://localhost:3030/car/${carId}/likes`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'auth_token': token\r\n        },\r\n        body: JSON.stringify(data)\r\n    })\r\n    let jsonResult = await result.json();\r\n    if (result.ok) {\r\n        return jsonResult\r\n    } else {\r\n        throw jsonResult.message\r\n    }\r\n}\r\nexport const dislike = async (carId, data, token) => {\r\n    let result = await fetch(`http://localhost:3030/car/${carId}/dislikes`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'auth_token': token\r\n        },\r\n        body: JSON.stringify(data)\r\n    })\r\n    let jsonResult = await result.json();\r\n    if (result.ok) {\r\n        return jsonResult\r\n    } else {\r\n        throw jsonResult.message\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}