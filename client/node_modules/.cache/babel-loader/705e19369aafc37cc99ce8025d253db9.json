{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nconst useLocalStorage = (key, initialValue) => {\n  _s();\n\n  const [state, setState] = useState(() => {\n    try {\n      let item = localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  const setLocalStorageItem = value => {\n    try {\n      localStorage.setItem(key, JSON.stringify(value));\n      setState(value);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return [state, setLocalStorageItem];\n};\n\n_s(useLocalStorage, \"IVBJ5JDBVWRhivH7T0/Ju36eW/k=\");\n\nexport default useLocalStorage;","map":{"version":3,"sources":["C:/Users/User/Desktop/car-dealers-react/src/hooks/useLocalStorage.js"],"names":["useState","useLocalStorage","key","initialValue","state","setState","item","localStorage","getItem","JSON","parse","error","console","log","setLocalStorageItem","value","setItem","stringify"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,eAAe,GAAG,CAACC,GAAD,EAAMC,YAAN,KAAuB;AAAA;;AAE3C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,MAAM;AAErC,QAAI;AACA,UAAIM,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqBN,GAArB,CAAX;AACA,aAAOI,IAAI,GAAGG,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAH,GAAsBH,YAAjC;AACH,KAHD,CAGE,OAAOQ,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,aAAOR,YAAP;AACH;AACJ,GATiC,CAAlC;;AAWA,QAAMW,mBAAmB,GAAIC,KAAD,IAAW;AAEnC,QAAI;AACAR,MAAAA,YAAY,CAACS,OAAb,CAAqBd,GAArB,EAA0BO,IAAI,CAACQ,SAAL,CAAeF,KAAf,CAA1B;AAEAV,MAAAA,QAAQ,CAACU,KAAD,CAAR;AACH,KAJD,CAIE,OAAOJ,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,GATD;;AAWA,SAAO,CACHP,KADG,EAEHU,mBAFG,CAAP;AAIH,CA5BD;;GAAMb,e;;AA+BN,eAAeA,eAAf","sourcesContent":["import { useState } from \"react\"\r\n\r\nconst useLocalStorage = (key, initialValue) => {\r\n\r\n    const [state, setState] = useState(() => {\r\n\r\n        try {\r\n            let item = localStorage.getItem(key)\r\n            return item ? JSON.parse(item) : initialValue;\r\n        } catch (error) {\r\n            console.log(error)\r\n            return initialValue;\r\n        }\r\n    })\r\n\r\n    const setLocalStorageItem = (value) => {\r\n\r\n        try {\r\n            localStorage.setItem(key, JSON.stringify(value))\r\n\r\n            setState(value)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    return [\r\n        state,\r\n        setLocalStorageItem,\r\n    ]\r\n}\r\n\r\n\r\nexport default useLocalStorage;"]},"metadata":{},"sourceType":"module"}