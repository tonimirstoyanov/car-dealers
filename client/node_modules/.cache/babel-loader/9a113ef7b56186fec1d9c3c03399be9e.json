{"ast":null,"code":"export const getAll = () => {\n  return fetch('http://localhost:3030/car/catalog').then(respone => respone.json());\n};\nexport const lastAdded = () => {\n  return fetch('http://localhost:3030').then(response => response.json());\n};\nexport const getOne = id => {\n  return fetch(`http://localhost:3030/car/${id}/details`).then(response => response.json());\n};\nexport const create = async (data, token) => {\n  let result = await fetch('http://localhost:3030/car/create', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'auth_token': token\n    },\n    body: JSON.stringify(data)\n  });\n  let jsonResult = await result.json();\n\n  if (result.ok) {\n    return jsonResult;\n  } else {\n    throw jsonResult.message;\n  }\n};\nexport const deleteOne = async (carId, token) => {\n  let result = await fetch(`http://localhost:3030/car/${carId}/delete`, {\n    method: 'DELETE',\n    headers: {\n      'auth_token': token\n    }\n  });\n  let jsonResult = await result.json();\n\n  if (result.ok) {\n    return jsonResult;\n  } else {\n    throw jsonResult.message;\n  }\n};\nexport const updateOne = async (carId, data, token) => {\n  let result = await fetch(`http://localhost:3030/car/${carId}/edit`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      'auth_token': token\n    },\n    body: JSON.stringify(data)\n  });\n  let jsonResult = await result.json();\n  console.log(jsonResult);\n\n  if (result.ok) {\n    return jsonResult;\n  } else {\n    throw jsonResult.message;\n  }\n};\nexport const like = async (carId, data, token) => {\n  let result = await fetch(`http://localhost:3030/car/${carId}/likes`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'auth_token': token\n    },\n    body: JSON.stringify(data)\n  });\n  let jsonResult = await result.json();\n\n  if (result.ok) {\n    return jsonResult;\n  } else {\n    throw jsonResult.message;\n  }\n};","map":{"version":3,"sources":["C:/Users/User/Desktop/car-dealers-react/src/services/carService.js"],"names":["getAll","fetch","then","respone","json","lastAdded","response","getOne","id","create","data","token","result","method","headers","body","JSON","stringify","jsonResult","ok","message","deleteOne","carId","updateOne","console","log","like"],"mappings":"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","sourcesContent":["export const getAll = () => {\r\n    return fetch('http://localhost:3030/car/catalog')\r\n        .then(respone => respone.json())\r\n}\r\nexport const lastAdded = () => {\r\n    return fetch('http://localhost:3030')\r\n        .then(response => response.json())\r\n}\r\n\r\nexport const getOne = (id) => {\r\n    return fetch(`http://localhost:3030/car/${id}/details`)\r\n        .then(response => response.json())\r\n}\r\n\r\nexport const create = async (data, token) => {\r\n    let result = await fetch('http://localhost:3030/car/create', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'auth_token': token\r\n        },\r\n        body: JSON.stringify(data)\r\n    })\r\n    let jsonResult = await result.json();\r\n\r\n    if (result.ok) {\r\n        return jsonResult\r\n    } else {\r\n        throw jsonResult.message\r\n    }\r\n}\r\n\r\n\r\nexport const deleteOne = async (carId, token) => {\r\n    let result = await fetch(`http://localhost:3030/car/${carId}/delete`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'auth_token': token\r\n        }\r\n    })\r\n    let jsonResult = await result.json();\r\n\r\n    if (result.ok) {\r\n        return jsonResult\r\n    } else {\r\n        throw jsonResult.message\r\n    }\r\n}\r\n\r\nexport const updateOne = async (carId, data, token) => {\r\n    let result = await fetch(`http://localhost:3030/car/${carId}/edit`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'auth_token': token\r\n        },\r\n        body: JSON.stringify(data)\r\n    })\r\n    let jsonResult = await result.json();\r\n    console.log(jsonResult)\r\n    if (result.ok) {\r\n        return jsonResult\r\n    } else {\r\n        throw jsonResult.message\r\n    }\r\n}\r\n\r\nexport const like = async (carId, data, token) => {\r\n    let result = await fetch(`http://localhost:3030/car/${carId}/likes`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'auth_token': token\r\n        },\r\n        body: JSON.stringify(data)\r\n    })\r\n    let jsonResult = await result.json();\r\n    if (result.ok) {\r\n        return jsonResult\r\n    } else {\r\n        throw jsonResult.message\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}